<?php

namespace App\Modules\BackEnd\Controllers;

use App\Models\Product;
use Illuminate\Http\Request;

use App\Models\Product as THIS;

class ProductController extends BackendController
{
    //config controller, ez for copying and paste
    protected $timeStamp = 'created';
    protected $tagID = 2;
    protected $filter_type = 'product';

    public function __construct()
    {
        parent::__construct(new THIS(), [[
            'title' => 'required|max:500',
            'image' => 'nullable|mimes:jpeg,jpg,png,gif',
        ]]);
        $this->folder_upload = Product::KEY;
    }

    public function index(Request $request)
    {
        $cond = [];
        if ($request->id != '') {
            $cond[] = ['id', $request->id];
        } else {
            if ($request->status != '') {
                $cond[] = ['status', $request->status];
            } else {
                $cond[] = ['status', '>', 0];
            }
            if ($request->title != '') {
                $cond[] = ['title', 'LIKE', '%' . $request->title . '%'];
            }
            if (!empty($request->time_from)) {
                $timeStamp = \Lib::getTimestampFromVNDate($request->time_from);
                array_push($cond, ['created', '>=', $timeStamp]);
            }
            if (!empty($request->time_to)) {
                $timeStamp = \Lib::getTimestampFromVNDate($request->time_to, true);
                array_push($cond, ['created', '<=', $timeStamp]);
            }
        }

        $data = THIS::where($cond)->orderByRaw('created DESC, id DESC')->paginate($this->recperpage);
        return $this->returnView('index', [
            'data' => $data,
            'search_data' => $request,
        ]);
    }

    public function showAddForm(Request $request)
    {
        return $this->returnView($this->bladeAdd);
    }

    public function showEditForm($id)
    {
        $data = THIS::find($id);
        set_old($data);
        return $this->returnView('edit', [
            'data' => $data,
        ]);
    }
    public function buildValidate(Request $request){

        if($this->editMode){
            $this->ignoreValidate('image');
            if ($request->hasFile('image')) {
                $this->addValidate(['image' => 'mimes:jpeg,jpg,png,gif']);
            }
        }
    }
    public function beforeSave(Request $request, $ignore_ext = []){
        parent::beforeSave($request); // TODO: Change the autogenerated stub

//        $this->model->price = intval(str_replace([',', '.'], '', $request->base_price));
        if (isset($request->id) && $request->id > 0) {
            $this->model->updated = time();
        }

        $this->unsetFields(['base_price']);
    }

}
 